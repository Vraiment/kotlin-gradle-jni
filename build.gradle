buildscript {
    ext.kotlin_version = '1.2.31'

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: 'kotlin'

repositories {
    mavenCentral()
}

sourceSets {
    main.kotlin.srcDirs = ["src"]
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
}

// Run the main function in test
task run(type: JavaExec) {
    main = 'Main'
    classpath = sourceSets.main.runtimeClasspath
}

def JNI_DIR = "${projectDir}/jni"
def JNI_BUILD_OUPUT = "${JNI_DIR}/build"
def JNI_JAVA_HOME = '/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home'

task generateJni(type: Exec) {
    // These should be variable
    ext.class = 'Native'
    ext.output = JNI_DIR

    commandLine 'javah', '-cp', sourceSets.main.runtimeClasspath.asPath, '-d', ext.output, ext.class
}

task buildJni(type: Exec) {
    environment 'JVM_HOME', JNI_JAVA_HOME
    environment 'OUTPUT', JNI_BUILD_OUPUT

    commandLine 'make', '-C', JNI_DIR
}

task cleanJni(type: Exec) {
    commandLine 'make', '-C', JNI_DIR, 'clean'
}

// Add the 'hooks' to execute the JNI commands with normal gradle commands
build.finalizedBy buildJni
clean.dependsOn cleanJni
